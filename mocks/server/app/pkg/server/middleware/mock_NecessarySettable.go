// Code generated by mockery v2.42.2. DO NOT EDIT.

package middleware

import (
	services "server/app/services"

	mock "github.com/stretchr/testify/mock"
)

// MockNecessarySettable is an autogenerated mock type for the NecessarySettable type
type MockNecessarySettable struct {
	mock.Mock
}

type MockNecessarySettable_Expecter struct {
	mock *mock.Mock
}

func (_m *MockNecessarySettable) EXPECT() *MockNecessarySettable_Expecter {
	return &MockNecessarySettable_Expecter{mock: &_m.Mock}
}

// SetNecessary provides a mock function with given fields: _a0
func (_m *MockNecessarySettable) SetNecessary(_a0 services.NecessaryUserInformation) interface{} {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SetNecessary")
	}

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(services.NecessaryUserInformation) interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// MockNecessarySettable_SetNecessary_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetNecessary'
type MockNecessarySettable_SetNecessary_Call struct {
	*mock.Call
}

// SetNecessary is a helper method to define mock.On call
//   - _a0 services.NecessaryUserInformation
func (_e *MockNecessarySettable_Expecter) SetNecessary(_a0 interface{}) *MockNecessarySettable_SetNecessary_Call {
	return &MockNecessarySettable_SetNecessary_Call{Call: _e.mock.On("SetNecessary", _a0)}
}

func (_c *MockNecessarySettable_SetNecessary_Call) Run(run func(_a0 services.NecessaryUserInformation)) *MockNecessarySettable_SetNecessary_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(services.NecessaryUserInformation))
	})
	return _c
}

func (_c *MockNecessarySettable_SetNecessary_Call) Return(_a0 interface{}) *MockNecessarySettable_SetNecessary_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNecessarySettable_SetNecessary_Call) RunAndReturn(run func(services.NecessaryUserInformation) interface{}) *MockNecessarySettable_SetNecessary_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockNecessarySettable creates a new instance of MockNecessarySettable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockNecessarySettable(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockNecessarySettable {
	mock := &MockNecessarySettable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
