name: deploy

on:
  workflow_call:
    inputs:
      service_port:
        required: true
        type: number
      service_name:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:

  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check variable
        run: |
          echo $GITHUB_REPOSITORY_OWNER
          echo $GITHUB_RUN_ID

      - name: Login to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Dockerfile
        uses: actions/download-artifact@v2
        with:
          name: Dockerfile
          path: .

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ inputs.service_name }}:${{ github.run_id }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    steps:
      - uses: actions/checkout@v3

      - name: SSH Setup
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
          ssh-host: ${{ secrets.HOST }}
          ssh-port: ${{ secrets.PORT }}

      - name: Download docker-compose.yml
        uses: actions/download-artifact@v2
        with:
          name: docker-compose.yml
          path: .

      - name: Copy docker-compose.yml to server
        run: scp -P ${{ secrets.PORT }} -p docker-compose.yml  ${{ secrets.USER }}@${{ secrets.HOST }}:/opt/coin/server/${{ inputs.service_name }}/docker-compose.yml

      - name: Login to the Container registry on server
        run: ssh ${{ secrets.USER }}@${{ secrets.HOST }} -p ${{ secrets.PORT }} "docker login -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}"

      - name: Pull docker image
        run: ssh ${{ secrets.USER }}@${{ secrets.HOST }} -p ${{ secrets.PORT }} "cd /opt/coin && docker compose pull coin-${{ inputs.service_name }}"

      - name: Restart service
        run: ssh ${{ secrets.USER }}@${{ secrets.HOST }} -p ${{ secrets.PORT }} "cd /opt/coin && if docker inspect coin-${{ inputs.service_name }} >/dev/null 2>&1; then docker compose stop coin-${{ inputs.service_name }} && docker rm coin-${{ inputs.service_name }}; fi && docker compose up coin-${{ inputs.service_name }} -d"
