// Code generated by mockery v2.42.2. DO NOT EDIT.

package chain

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockEncodeResponseFunc is an autogenerated mock type for the EncodeResponseFunc type
type MockEncodeResponseFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2
func (_m *MockEncodeResponseFunc) Execute(_a0 context.Context, _a1 http.ResponseWriter, _a2 interface{}) error {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, http.ResponseWriter, interface{}) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockEncodeResponseFunc creates a new instance of MockEncodeResponseFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEncodeResponseFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEncodeResponseFunc {
	mock := &MockEncodeResponseFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
