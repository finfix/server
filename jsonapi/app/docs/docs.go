// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Ilia Ivanov",
            "email": "bonavii@icloud.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account": {
            "get": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Получение счетов по фильтрам",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Идентификаторы групп счетов",
                        "name": "accountGroupIDs",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Видимость счета",
                        "name": "accounting",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Дата начала выборки (Обязательна при type = expense or earnings и отсутствующем периоде)",
                        "name": "dateFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Дата конца выборки (Обязательна при type = expense or earnings и отсутствующем периоде)",
                        "name": "dateTo",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "regular",
                            "expense",
                            "credit",
                            "debt",
                            "earnings",
                            "investments"
                        ],
                        "type": "string",
                        "description": "Тип счета",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Видимость счета",
                        "name": "visible",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Account"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "description": "Создается новый счет, если у него есть остаток, то создается транзакция от нулевого счета для баланса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Создание счета",
                "parameters": [
                    {
                        "description": "model.CreateReq",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi_app_internal_services_account_model.CreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi_app_internal_services_account_model.CreateRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "description": "Удаление данных по счету",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Удаление счета",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Идентификатор счета",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Если удаление счета прошло успешно, возвращается пустой ответ"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "description": "Изменение данных счета",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Редактирование счета",
                "parameters": [
                    {
                        "description": "model.UpdateReq",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi_app_internal_services_account_model.UpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Если редактирование счета прошло успешно, возвращается пустой ответ"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/account/accountGroups": {
            "get": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Получение списка групп счетов",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Идентификаторы групп счетов",
                        "name": "accountGroupIDs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "[]model.AccountGroup",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AccountGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/account/quickStatistic": {
            "get": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Получение краткой статистики по счетам",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор группы счетов",
                        "name": "accountGroupID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Валюта",
                        "name": "currency",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Общая сумма бюджетов",
                        "name": "totalBudget",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Общая сумма расходов",
                        "name": "totalExpense",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Общий баланс видимых счетов",
                        "name": "totalRemainder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "[]model.QuickStatistic",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.QuickStatistic"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/account/switch": {
            "patch": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "description": "Поменять два счета местами",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Изменение порядковых мест двух счетов",
                "parameters": [
                    {
                        "description": "model.SwitchReq",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SwitchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Если изменение порядка счетов прошло успешно, возвращается пустой ответ"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/auth/refreshTokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление токенов",
                "parameters": [
                    {
                        "description": "pbAuth.RefreshTokensReq",
                        "name": "Dody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbAuth.RefreshTokensReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RefreshTokensRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/auth/signIn": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя по логину и паролю",
                "parameters": [
                    {
                        "description": "model.SignInReq",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignInReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Нужен для идентификации устройства",
                        "name": "DeviceID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AuthRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/auth/signUp": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "model.SignUpReq",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignUpReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Нужен для идентификации устройства",
                        "name": "DeviceID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AuthRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/transaction": {
            "get": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "description": "Получение всех транзакций по фильтрам",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Получение всех транзакций",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Идентификаторы групп счетов",
                        "name": "accountGroupIDs",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Видимость счета",
                        "name": "accounting",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Дата начала выборки (Обязательна при type = expense or earnings и отсутствующем периоде)",
                        "name": "dateFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Дата конца выборки (Обязательна при type = expense or earnings и отсутствующем периоде)",
                        "name": "dateTo",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "regular",
                            "expense",
                            "credit",
                            "debt",
                            "earnings",
                            "investments"
                        ],
                        "type": "string",
                        "description": "Тип счета",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Видимость счета",
                        "name": "visible",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "description": "Создание транзакции и изменение баланса счетов, между которыми она произошла",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Создание транзакции",
                "parameters": [
                    {
                        "description": "model.CreateReq",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi_app_internal_services_transaction_model.CreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi_app_internal_services_transaction_model.CreateRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "description": "Удаление данных транзакции и изменение баланса счетов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Удаление транзакции",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Идентификатор транзакции",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Если удаление транзакции прошло успешно, возвращается пустой ответ"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "description": "Изменение данных транзакции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Редактирование транзакции",
                "parameters": [
                    {
                        "description": "model.CreateReq",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi_app_internal_services_transaction_model.UpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Если редактирование транзакции прошло успешно, возвращается пустой ответ"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Получение данных пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Бла бла бла",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/user/getCurrencies": {
            "get": {
                "security": [
                    {
                        "AuthJWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Получение списка валют",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Currency"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.CustomError": {
            "type": "object",
            "required": [
                "context"
            ],
            "properties": {
                "ErrorType": {
                    "type": "integer"
                },
                "context": {
                    "type": "string"
                },
                "developerTextError": {
                    "type": "string"
                },
                "humanTextError": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "jsonapi_app_internal_services_account_model.CreateReq": {
            "type": "object",
            "required": [
                "accountGroupID",
                "accounting",
                "currency",
                "gradualBudgetFilling",
                "iconID",
                "name",
                "type"
            ],
            "properties": {
                "accountGroupID": {
                    "description": "Группа счета",
                    "type": "integer",
                    "minimum": 1
                },
                "accounting": {
                    "description": "Подсчет суммы счета в статистике",
                    "type": "boolean"
                },
                "budget": {
                    "description": "Месячный бюджет",
                    "type": "number"
                },
                "currency": {
                    "description": "Валюта счета",
                    "type": "string"
                },
                "gradualBudgetFilling": {
                    "description": "Постепенное пополнение бюджета",
                    "type": "boolean"
                },
                "iconID": {
                    "description": "Идентификатор иконки",
                    "type": "integer",
                    "minimum": 1
                },
                "name": {
                    "description": "Название счета",
                    "type": "string"
                },
                "remainder": {
                    "description": "Остаток средств на счету",
                    "type": "number"
                },
                "type": {
                    "description": "Тип счета",
                    "type": "string",
                    "enum": [
                        "regular",
                        "expense",
                        "credit",
                        "debt",
                        "earnings",
                        "investments"
                    ]
                }
            }
        },
        "jsonapi_app_internal_services_account_model.CreateRes": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Идентификатор созданного счета",
                    "type": "integer"
                }
            }
        },
        "jsonapi_app_internal_services_account_model.UpdateReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "accountGroupID": {
                    "description": "Идентификатор группы счета",
                    "type": "integer",
                    "minimum": 1
                },
                "accounting": {
                    "description": "Будет ли счет учитываться в статистике",
                    "type": "boolean"
                },
                "budget": {
                    "description": "Месячный бюджет",
                    "type": "integer",
                    "minimum": 0
                },
                "gradualBudgetFilling": {
                    "description": "Постепенное пополнение бюджета",
                    "type": "boolean"
                },
                "iconID": {
                    "description": "Идентификатор иконки",
                    "type": "integer",
                    "minimum": 1
                },
                "id": {
                    "description": "Идентификатор счета",
                    "type": "integer",
                    "minimum": 1
                },
                "name": {
                    "description": "Название счета",
                    "type": "string"
                },
                "remainder": {
                    "description": "Остаток средств на счету",
                    "type": "number"
                },
                "visible": {
                    "description": "Видимость счета",
                    "type": "boolean"
                }
            }
        },
        "jsonapi_app_internal_services_transaction_model.CreateReq": {
            "type": "object",
            "required": [
                "accountFromID",
                "accountToID",
                "amountFrom",
                "amountTo",
                "dateTransaction",
                "isExecuted",
                "type"
            ],
            "properties": {
                "accountFromID": {
                    "description": "Идентификатор счета списания",
                    "type": "integer",
                    "minimum": 1
                },
                "accountToID": {
                    "description": "Идентификатор счета пополнения",
                    "type": "integer",
                    "minimum": 1
                },
                "amountFrom": {
                    "description": "Сумма списания с первого счета",
                    "type": "number",
                    "minimum": 1
                },
                "amountTo": {
                    "description": "Сумма пополнения второго счета (в случаях меж валютной транзакции цифры отличаются)",
                    "type": "number",
                    "minimum": 1
                },
                "dateTransaction": {
                    "description": "Дата транзакции",
                    "type": "string",
                    "format": "date"
                },
                "isExecuted": {
                    "description": "Исполнена операция или нет (если нет, сделки как бы не существует)",
                    "type": "boolean"
                },
                "note": {
                    "description": "Заметка для транзакции",
                    "type": "string"
                },
                "type": {
                    "description": "Тип транзакции",
                    "type": "string"
                }
            }
        },
        "jsonapi_app_internal_services_transaction_model.CreateRes": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "Идентификатор транзакции",
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "jsonapi_app_internal_services_transaction_model.UpdateReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "accountFromID": {
                    "description": "Идентификатор счета списания",
                    "type": "integer",
                    "minimum": 1
                },
                "accountToID": {
                    "description": "Идентификатор счета пополнения",
                    "type": "integer",
                    "minimum": 1
                },
                "amountFrom": {
                    "description": "Сумма списания с первого счета",
                    "type": "number",
                    "minimum": 1
                },
                "amountTo": {
                    "description": "Сумма пополнения второго счета",
                    "type": "number",
                    "minimum": 1
                },
                "dateTransaction": {
                    "description": "Дата транзакции",
                    "type": "string",
                    "format": "date"
                },
                "id": {
                    "description": "Идентификатор транзакции",
                    "type": "integer",
                    "minimum": 1
                },
                "isExecuted": {
                    "description": "Исполнена операция или нет (если нет, сделки как бы не существует)",
                    "type": "boolean"
                },
                "note": {
                    "description": "Заметка для транзакции",
                    "type": "string"
                }
            }
        },
        "model.Account": {
            "type": "object",
            "required": [
                "parentAccountID"
            ],
            "properties": {
                "accountGroupID": {
                    "description": "Идентификатор группы счета",
                    "type": "integer"
                },
                "accounting": {
                    "description": "Будет ли счет учитываться в статистике",
                    "type": "boolean"
                },
                "budget": {
                    "description": "Месячный бюджет",
                    "type": "number"
                },
                "currency": {
                    "description": "Валюта счета",
                    "type": "string"
                },
                "gradualBudgetFilling": {
                    "description": "Постепенное пополнение бюджета",
                    "type": "boolean"
                },
                "iconID": {
                    "description": "Идентификатор иконки",
                    "type": "integer"
                },
                "id": {
                    "description": "Идентификатор счета",
                    "type": "integer"
                },
                "isParent": {
                    "description": "Является ли счет родительским",
                    "type": "boolean"
                },
                "name": {
                    "description": "Название счета",
                    "type": "string"
                },
                "parentAccountID": {
                    "description": "Идентификатор родительского аккаунта",
                    "type": "integer"
                },
                "remainder": {
                    "description": "Остаток средств на счету",
                    "type": "number"
                },
                "serialNumber": {
                    "description": "Порядковый номер счета",
                    "type": "integer"
                },
                "type": {
                    "description": "Тип счета",
                    "type": "string",
                    "enum": [
                        "regular",
                        "expense",
                        "credit",
                        "debt",
                        "earnings",
                        "investments"
                    ]
                },
                "visible": {
                    "description": "Видимость счета",
                    "type": "boolean"
                }
            }
        },
        "model.AccountGroup": {
            "type": "object",
            "properties": {
                "currency": {
                    "description": "Валюта группы счетов",
                    "type": "string"
                },
                "id": {
                    "description": "Идентификатор группы счетов",
                    "type": "integer"
                },
                "name": {
                    "description": "Название группы счетов",
                    "type": "string"
                },
                "serialNumber": {
                    "description": "Порядковый номер группы счетов",
                    "type": "integer"
                },
                "visible": {
                    "description": "Видимость группы счетов",
                    "type": "boolean"
                }
            }
        },
        "model.AuthRes": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "Токен доступа",
                    "type": "string"
                },
                "id": {
                    "description": "Идентификатор пользователя",
                    "type": "integer"
                },
                "refreshToken": {
                    "description": "Токен восстановления доступа",
                    "type": "string"
                }
            }
        },
        "model.Currency": {
            "type": "object",
            "properties": {
                "isoCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.QuickStatistic": {
            "type": "object",
            "properties": {
                "accountGroupID": {
                    "description": "Идентификатор группы счетов",
                    "type": "integer"
                },
                "currency": {
                    "description": "Валюта",
                    "type": "string"
                },
                "totalBudget": {
                    "description": "Общая сумма бюджетов",
                    "type": "number"
                },
                "totalExpense": {
                    "description": "Общая сумма расходов",
                    "type": "number"
                },
                "totalRemainder": {
                    "description": "Общий баланс видимых счетов",
                    "type": "number"
                }
            }
        },
        "model.RefreshTokensRes": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "Токен доступа",
                    "type": "string"
                },
                "refreshToken": {
                    "description": "Токен восстановления доступа",
                    "type": "string"
                }
            }
        },
        "model.SignInReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "Электронная почта пользователя",
                    "type": "string",
                    "format": "email"
                },
                "password": {
                    "description": "Пароль пользователя",
                    "type": "string"
                }
            }
        },
        "model.SignUpReq": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "Электронная почта пользователя",
                    "type": "string",
                    "format": "email"
                },
                "name": {
                    "description": "Имя пользователя",
                    "type": "string"
                },
                "password": {
                    "description": "Пароль пользователя",
                    "type": "string"
                }
            }
        },
        "model.SwitchReq": {
            "type": "object",
            "required": [
                "id_1",
                "id_2"
            ],
            "properties": {
                "id_1": {
                    "description": "Идентификатор первого счета",
                    "type": "integer",
                    "minimum": 1
                },
                "id_2": {
                    "description": "Идентификатор второго счета",
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "model.Tag": {
            "type": "object",
            "properties": {
                "tagID": {
                    "type": "integer",
                    "minimum": 1
                },
                "transactionID": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "model.Transaction": {
            "type": "object",
            "properties": {
                "accountFromID": {
                    "description": "Идентификатор счета списания",
                    "type": "integer",
                    "minimum": 1
                },
                "accountToID": {
                    "description": "Идентификатор счета пополнения",
                    "type": "integer",
                    "minimum": 1
                },
                "accounting": {
                    "description": "Учитывается ли транзакция в статистике или нет",
                    "type": "boolean"
                },
                "amountFrom": {
                    "description": "Сумма сделки в первой валюте",
                    "type": "number",
                    "minimum": 1
                },
                "amountTo": {
                    "description": "Сумма сделки во второй валюте",
                    "type": "number",
                    "minimum": 1
                },
                "dateTransaction": {
                    "description": "Дата транзакции (пользовательские)",
                    "type": "string",
                    "format": "date"
                },
                "id": {
                    "description": "Идентификатор транзакции",
                    "type": "integer",
                    "minimum": 1
                },
                "isExecuted": {
                    "description": "Исполнена операция или нет (если нет, сделки как бы не существует)",
                    "type": "boolean"
                },
                "note": {
                    "description": "Заметка сделки",
                    "type": "string"
                },
                "tags": {
                    "description": "Подкатегории",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "timeCreate": {
                    "description": "Дата и время создания транзакции",
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "description": "Тип транзакции",
                    "type": "string",
                    "enum": [
                        "consumption",
                        "income",
                        "transfer"
                    ]
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "defaultCurrency": {
                    "description": "Валюта по умолчанию",
                    "type": "string"
                },
                "email": {
                    "description": "Электронная почта",
                    "type": "string"
                },
                "id": {
                    "description": "Идентификатор пользователя",
                    "type": "integer"
                },
                "name": {
                    "description": "Имя пользователя",
                    "type": "string"
                },
                "timeCreate": {
                    "description": "Дата и время создания аккаунта",
                    "type": "string"
                }
            }
        },
        "pbAuth.RefreshTokensReq": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "Токен восстановления доступа",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AuthJWT": {
            "description": "JWT-токен авторизации",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "SecretKey": {
            "description": "Ключ для доступа к админ-методам",
            "type": "apiKey",
            "name": "MySecretKey",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "COIN Server Documentation",
	Description:      "API Documentation for Coin",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
