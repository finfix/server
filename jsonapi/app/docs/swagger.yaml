definitions:
  errors.CustomError:
    properties:
      ErrorType:
        type: integer
      context:
        type: string
      developerTextError:
        type: string
      humanTextError:
        type: string
      path:
        type: string
    required:
    - context
    type: object
  jsonapi_app_internal_services_account_model.CreateReq:
    properties:
      accountGroupID:
        description: Группа счета
        minimum: 1
        type: integer
      accounting:
        description: Подсчет суммы счета в статистике
        type: boolean
      budget:
        description: Месячный бюджет
        type: number
      currency:
        description: Валюта счета
        type: string
      gradualBudgetFilling:
        description: Постепенное пополнение бюджета
        type: boolean
      iconID:
        description: Идентификатор иконки
        minimum: 1
        type: integer
      name:
        description: Название счета
        type: string
      remainder:
        description: Остаток средств на счету
        type: number
      type:
        description: Тип счета
        enum:
        - regular
        - expense
        - credit
        - debt
        - earnings
        - investments
        type: string
    required:
    - accountGroupID
    - accounting
    - currency
    - gradualBudgetFilling
    - iconID
    - name
    - type
    type: object
  jsonapi_app_internal_services_account_model.CreateRes:
    properties:
      id:
        description: Идентификатор созданного счета
        type: integer
    type: object
  jsonapi_app_internal_services_account_model.UpdateReq:
    properties:
      accountGroupID:
        description: Идентификатор группы счета
        minimum: 1
        type: integer
      accounting:
        description: Будет ли счет учитываться в статистике
        type: boolean
      budget:
        description: Месячный бюджет
        minimum: 0
        type: integer
      gradualBudgetFilling:
        description: Постепенное пополнение бюджета
        type: boolean
      iconID:
        description: Идентификатор иконки
        minimum: 1
        type: integer
      id:
        description: Идентификатор счета
        minimum: 1
        type: integer
      name:
        description: Название счета
        type: string
      remainder:
        description: Остаток средств на счету
        type: number
      visible:
        description: Видимость счета
        type: boolean
    required:
    - id
    type: object
  jsonapi_app_internal_services_transaction_model.CreateReq:
    properties:
      accountFromID:
        description: Идентификатор счета списания
        minimum: 1
        type: integer
      accountToID:
        description: Идентификатор счета пополнения
        minimum: 1
        type: integer
      amountFrom:
        description: Сумма списания с первого счета
        minimum: 1
        type: number
      amountTo:
        description: Сумма пополнения второго счета (в случаях меж валютной транзакции
          цифры отличаются)
        minimum: 1
        type: number
      dateTransaction:
        description: Дата транзакции
        format: date
        type: string
      isExecuted:
        description: Исполнена операция или нет (если нет, сделки как бы не существует)
        type: boolean
      note:
        description: Заметка для транзакции
        type: string
      type:
        description: Тип транзакции
        type: string
    required:
    - accountFromID
    - accountToID
    - amountFrom
    - amountTo
    - dateTransaction
    - isExecuted
    - type
    type: object
  jsonapi_app_internal_services_transaction_model.CreateRes:
    properties:
      id:
        description: Идентификатор транзакции
        minimum: 1
        type: integer
    required:
    - id
    type: object
  jsonapi_app_internal_services_transaction_model.UpdateReq:
    properties:
      accountFromID:
        description: Идентификатор счета списания
        minimum: 1
        type: integer
      accountToID:
        description: Идентификатор счета пополнения
        minimum: 1
        type: integer
      amountFrom:
        description: Сумма списания с первого счета
        minimum: 1
        type: number
      amountTo:
        description: Сумма пополнения второго счета
        minimum: 1
        type: number
      dateTransaction:
        description: Дата транзакции
        format: date
        type: string
      id:
        description: Идентификатор транзакции
        minimum: 1
        type: integer
      isExecuted:
        description: Исполнена операция или нет (если нет, сделки как бы не существует)
        type: boolean
      note:
        description: Заметка для транзакции
        type: string
    required:
    - id
    type: object
  model.Account:
    properties:
      accountGroupID:
        description: Идентификатор группы счета
        type: integer
      accounting:
        description: Будет ли счет учитываться в статистике
        type: boolean
      budget:
        description: Месячный бюджет
        type: number
      currency:
        description: Валюта счета
        type: string
      gradualBudgetFilling:
        description: Постепенное пополнение бюджета
        type: boolean
      iconID:
        description: Идентификатор иконки
        type: integer
      id:
        description: Идентификатор счета
        type: integer
      isParent:
        description: Является ли счет родительским
        type: boolean
      name:
        description: Название счета
        type: string
      parentAccountID:
        description: Идентификатор родительского аккаунта
        type: integer
      remainder:
        description: Остаток средств на счету
        type: number
      serialNumber:
        description: Порядковый номер счета
        type: integer
      type:
        description: Тип счета
        enum:
        - regular
        - expense
        - credit
        - debt
        - earnings
        - investments
        type: string
      visible:
        description: Видимость счета
        type: boolean
    required:
    - parentAccountID
    type: object
  model.AccountGroup:
    properties:
      currency:
        description: Валюта группы счетов
        type: string
      id:
        description: Идентификатор группы счетов
        type: integer
      name:
        description: Название группы счетов
        type: string
      serialNumber:
        description: Порядковый номер группы счетов
        type: integer
      visible:
        description: Видимость группы счетов
        type: boolean
    type: object
  model.AuthRes:
    properties:
      accessToken:
        description: Токен доступа
        type: string
      id:
        description: Идентификатор пользователя
        type: integer
      refreshToken:
        description: Токен восстановления доступа
        type: string
    type: object
  model.Currency:
    properties:
      isoCode:
        type: string
      name:
        type: string
      rate:
        type: number
      symbol:
        type: string
    type: object
  model.QuickStatistic:
    properties:
      accountGroupID:
        description: Идентификатор группы счетов
        type: integer
      currency:
        description: Валюта
        type: string
      totalBudget:
        description: Общая сумма бюджетов
        type: number
      totalExpense:
        description: Общая сумма расходов
        type: number
      totalRemainder:
        description: Общий баланс видимых счетов
        type: number
    type: object
  model.RefreshTokensRes:
    properties:
      accessToken:
        description: Токен доступа
        type: string
      refreshToken:
        description: Токен восстановления доступа
        type: string
    type: object
  model.SignInReq:
    properties:
      email:
        description: Электронная почта пользователя
        format: email
        type: string
      password:
        description: Пароль пользователя
        type: string
    required:
    - email
    - password
    type: object
  model.SignUpReq:
    properties:
      email:
        description: Электронная почта пользователя
        format: email
        type: string
      name:
        description: Имя пользователя
        type: string
      password:
        description: Пароль пользователя
        type: string
    required:
    - email
    - name
    - password
    type: object
  model.SwitchReq:
    properties:
      id_1:
        description: Идентификатор первого счета
        minimum: 1
        type: integer
      id_2:
        description: Идентификатор второго счета
        minimum: 1
        type: integer
    required:
    - id_1
    - id_2
    type: object
  model.Tag:
    properties:
      tagID:
        minimum: 1
        type: integer
      transactionID:
        minimum: 1
        type: integer
    type: object
  model.Transaction:
    properties:
      accountFromID:
        description: Идентификатор счета списания
        minimum: 1
        type: integer
      accountToID:
        description: Идентификатор счета пополнения
        minimum: 1
        type: integer
      accounting:
        description: Учитывается ли транзакция в статистике или нет
        type: boolean
      amountFrom:
        description: Сумма сделки в первой валюте
        minimum: 1
        type: number
      amountTo:
        description: Сумма сделки во второй валюте
        minimum: 1
        type: number
      dateTransaction:
        description: Дата транзакции (пользовательские)
        format: date
        type: string
      id:
        description: Идентификатор транзакции
        minimum: 1
        type: integer
      isExecuted:
        description: Исполнена операция или нет (если нет, сделки как бы не существует)
        type: boolean
      note:
        description: Заметка сделки
        type: string
      tags:
        description: Подкатегории
        items:
          $ref: '#/definitions/model.Tag'
        type: array
      timeCreate:
        description: Дата и время создания транзакции
        format: date-time
        type: string
      type:
        description: Тип транзакции
        enum:
        - consumption
        - income
        - transfer
        type: string
    type: object
  model.User:
    properties:
      defaultCurrency:
        description: Валюта по умолчанию
        type: string
      email:
        description: Электронная почта
        type: string
      id:
        description: Идентификатор пользователя
        type: integer
      name:
        description: Имя пользователя
        type: string
      timeCreate:
        description: Дата и время создания аккаунта
        type: string
    type: object
  pbAuth.RefreshTokensReq:
    properties:
      token:
        description: Токен восстановления доступа
        type: string
    type: object
info:
  contact:
    email: bonavii@icloud.com
    name: Ilia Ivanov
  description: API Documentation for Coin
  title: COIN Server Documentation
  version: "1.0"
paths:
  /account:
    delete:
      description: Удаление данных по счету
      parameters:
      - description: Идентификатор счета
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Если удаление счета прошло успешно, возвращается пустой ответ
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Удаление счета
      tags:
      - account
    get:
      parameters:
      - description: Идентификаторы групп счетов
        in: query
        items:
          type: integer
        name: accountGroupIDs
        type: array
      - description: Видимость счета
        in: query
        name: accounting
        type: boolean
      - description: Дата начала выборки (Обязательна при type = expense or earnings
          и отсутствующем периоде)
        format: date
        in: query
        name: dateFrom
        type: string
      - description: Дата конца выборки (Обязательна при type = expense or earnings
          и отсутствующем периоде)
        format: date
        in: query
        name: dateTo
        type: string
      - description: Тип счета
        enum:
        - regular
        - expense
        - credit
        - debt
        - earnings
        - investments
        in: query
        name: type
        type: string
      - description: Видимость счета
        in: query
        name: visible
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Account'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Получение счетов по фильтрам
      tags:
      - account
    patch:
      consumes:
      - application/json
      description: Изменение данных счета
      parameters:
      - description: model.UpdateReq
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/jsonapi_app_internal_services_account_model.UpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Если редактирование счета прошло успешно, возвращается пустой
            ответ
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Редактирование счета
      tags:
      - account
    post:
      consumes:
      - application/json
      description: Создается новый счет, если у него есть остаток, то создается транзакция
        от нулевого счета для баланса
      parameters:
      - description: model.CreateReq
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/jsonapi_app_internal_services_account_model.CreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/jsonapi_app_internal_services_account_model.CreateRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Создание счета
      tags:
      - account
  /account/accountGroups:
    get:
      parameters:
      - description: Идентификаторы групп счетов
        in: query
        items:
          type: integer
        name: accountGroupIDs
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: '[]model.AccountGroup'
          schema:
            items:
              $ref: '#/definitions/model.AccountGroup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Получение списка групп счетов
      tags:
      - account
  /account/quickStatistic:
    get:
      parameters:
      - description: Идентификатор группы счетов
        in: query
        name: accountGroupID
        type: integer
      - description: Валюта
        in: query
        name: currency
        type: string
      - description: Общая сумма бюджетов
        in: query
        name: totalBudget
        type: number
      - description: Общая сумма расходов
        in: query
        name: totalExpense
        type: number
      - description: Общий баланс видимых счетов
        in: query
        name: totalRemainder
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: '[]model.QuickStatistic'
          schema:
            items:
              $ref: '#/definitions/model.QuickStatistic'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Получение краткой статистики по счетам
      tags:
      - account
  /account/switch:
    patch:
      consumes:
      - application/json
      description: Поменять два счета местами
      parameters:
      - description: model.SwitchReq
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SwitchReq'
      produces:
      - application/json
      responses:
        "200":
          description: Если изменение порядка счетов прошло успешно, возвращается
            пустой ответ
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Изменение порядковых мест двух счетов
      tags:
      - account
  /auth/refreshTokens:
    post:
      consumes:
      - application/json
      parameters:
      - description: pbAuth.RefreshTokensReq
        in: body
        name: Dody
        required: true
        schema:
          $ref: '#/definitions/pbAuth.RefreshTokensReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RefreshTokensRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      summary: Обновление токенов
      tags:
      - auth
  /auth/signIn:
    post:
      consumes:
      - application/json
      parameters:
      - description: model.SignInReq
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SignInReq'
      - description: Нужен для идентификации устройства
        in: header
        name: DeviceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      summary: Авторизация пользователя по логину и паролю
      tags:
      - auth
  /auth/signUp:
    post:
      consumes:
      - application/json
      parameters:
      - description: model.SignUpReq
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SignUpReq'
      - description: Нужен для идентификации устройства
        in: header
        name: DeviceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      summary: Регистрация пользователя
      tags:
      - auth
  /transaction:
    delete:
      description: Удаление данных транзакции и изменение баланса счетов
      parameters:
      - description: Идентификатор транзакции
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Если удаление транзакции прошло успешно, возвращается пустой
            ответ
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Удаление транзакции
      tags:
      - transaction
    get:
      description: Получение всех транзакций по фильтрам
      parameters:
      - description: Идентификаторы групп счетов
        in: query
        items:
          type: integer
        name: accountGroupIDs
        type: array
      - description: Видимость счета
        in: query
        name: accounting
        type: boolean
      - description: Дата начала выборки (Обязательна при type = expense or earnings
          и отсутствующем периоде)
        format: date
        in: query
        name: dateFrom
        type: string
      - description: Дата конца выборки (Обязательна при type = expense or earnings
          и отсутствующем периоде)
        format: date
        in: query
        name: dateTo
        type: string
      - description: Тип счета
        enum:
        - regular
        - expense
        - credit
        - debt
        - earnings
        - investments
        in: query
        name: type
        type: string
      - description: Видимость счета
        in: query
        name: visible
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Получение всех транзакций
      tags:
      - transaction
    patch:
      consumes:
      - application/json
      description: Изменение данных транзакции
      parameters:
      - description: model.CreateReq
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/jsonapi_app_internal_services_transaction_model.UpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Если редактирование транзакции прошло успешно, возвращается
            пустой ответ
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Редактирование транзакции
      tags:
      - transaction
    post:
      consumes:
      - application/json
      description: Создание транзакции и изменение баланса счетов, между которыми
        она произошла
      parameters:
      - description: model.CreateReq
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/jsonapi_app_internal_services_transaction_model.CreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/jsonapi_app_internal_services_transaction_model.CreateRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Создание транзакции
      tags:
      - transaction
  /user/:
    get:
      parameters:
      - description: Бла бла бла
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Получение данных пользователя
      tags:
      - user
  /user/getCurrencies:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Currency'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.CustomError'
      security:
      - AuthJWT: []
      summary: Получение списка валют
      tags:
      - user
securityDefinitions:
  AuthJWT:
    description: JWT-токен авторизации
    in: header
    name: Authorization
    type: apiKey
  SecretKey:
    description: Ключ для доступа к админ-методам
    in: header
    name: MySecretKey
    type: apiKey
swagger: "2.0"
