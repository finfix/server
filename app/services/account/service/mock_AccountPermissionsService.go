// Code generated by mockery v2.42.2. DO NOT EDIT.

package service

import (
	accountPermissions "server/app/services/accountPermissions"

	mock "github.com/stretchr/testify/mock"

	model "server/app/services/account/model"
)

// MockAccountPermissionsService is an autogenerated mock type for the AccountPermissionsService type
type MockAccountPermissionsService struct {
	mock.Mock
}

// CheckAccountPermissions provides a mock function with given fields: req, permissions
func (_m *MockAccountPermissionsService) CheckAccountPermissions(req model.UpdateAccountReq, permissions accountPermissions.AccountPermissions) error {
	ret := _m.Called(req, permissions)

	if len(ret) == 0 {
		panic("no return value specified for CheckAccountPermissions")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(model.UpdateAccountReq, accountPermissions.AccountPermissions) error); ok {
		r0 = rf(req, permissions)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAccountPermissions provides a mock function with given fields: account
func (_m *MockAccountPermissionsService) GetAccountPermissions(account model.Account) accountPermissions.AccountPermissions {
	ret := _m.Called(account)

	if len(ret) == 0 {
		panic("no return value specified for GetAccountPermissions")
	}

	var r0 accountPermissions.AccountPermissions
	if rf, ok := ret.Get(0).(func(model.Account) accountPermissions.AccountPermissions); ok {
		r0 = rf(account)
	} else {
		r0 = ret.Get(0).(accountPermissions.AccountPermissions)
	}

	return r0
}

// NewMockAccountPermissionsService creates a new instance of MockAccountPermissionsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAccountPermissionsService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAccountPermissionsService {
	mock := &MockAccountPermissionsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
