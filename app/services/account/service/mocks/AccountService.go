// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	context "context"
	model "server/app/services/account/model"

	mock "github.com/stretchr/testify/mock"
)

// AccountService is an autogenerated mock type for the AccountService type
type AccountService struct {
	mock.Mock
}

// ChangeRemainder provides a mock function with given fields: ctx, account, remainderToUpdate
func (_m *AccountService) ChangeRemainder(ctx context.Context, account model.Account, remainderToUpdate float64) error {
	ret := _m.Called(ctx, account, remainderToUpdate)

	if len(ret) == 0 {
		panic("no return value specified for ChangeRemainder")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.Account, float64) error); ok {
		r0 = rf(ctx, account, remainderToUpdate)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateUpdateParentAccountID provides a mock function with given fields: ctx, account, parentAccountID, userID
func (_m *AccountService) ValidateUpdateParentAccountID(ctx context.Context, account model.Account, parentAccountID uint32, userID uint32) error {
	ret := _m.Called(ctx, account, parentAccountID, userID)

	if len(ret) == 0 {
		panic("no return value specified for ValidateUpdateParentAccountID")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.Account, uint32, uint32) error); ok {
		r0 = rf(ctx, account, parentAccountID, userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewAccountService creates a new instance of AccountService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAccountService(t interface {
	mock.TestingT
	Cleanup(func())
}) *AccountService {
	mock := &AccountService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
